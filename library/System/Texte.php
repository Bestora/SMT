<?php/** * PHP SMT by palle * Monitor your servers and websites. * * This file is part of PHP SMT by palle. * PHP SMT by palle is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * PHP SMT by palle is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with PHP SMT by palle.  If not, see <http://www.gnu.org/licenses/>. * * @package     SMT * @author      Werner Pallentin <wpa@palle.de> * @copyright   Copyright (c) Werner Pallentin <wpa@palle.de> * @license     http://www.gnu.org/licenses/gpl.txt GNU GPL v3 * @version     Release: v2.1 * @link        https://smt.palle.dev **/class Texte extends Language{    static protected $text;    public function __construct()    {        if (preg_match('/language/', filter_input(INPUT_SERVER, 'REQUEST_URI'))) {            parent::setLanguage(substr(filter_input(INPUT_SERVER, 'REQUEST_URI'), -2));            header("Location: " . filter_input(INPUT_SERVER, 'HTTP_REFERER'));        }        self::getSprachen();        $this->loadTexte();    }    /**     * Methode zum einlesen der vorhanden Sprachen     * @return string     */    public static function getSprachen()    {        $session = Session::getInstance();        $db = new Database('SMT-ADMIN');        $db->getQuery("SELECT * FROM wos_international WHERE aktiv=:aktiv ORDER BY id", array(':aktiv' => 'ja'));        $session->set('sprachen', $db->getValue());        $db->getQuery("SELECT * FROM wos_international WHERE aktiv=:aktiv ORDER BY id", array(':aktiv' => 'nein'));        return $db->getValue();    }    /**     * Methode zum auslesen aller Systemtexte     * und den Texten zum aktuellen Controller     */    public function loadTexte()    {        $session = Session::getInstance();        $tabelle = "wos_language_" . $session->get('language');        $db = new Database('SMT-ADMIN');        $db->getQuery("SELECT * FROM $tabelle", array());        for ($i = 0; $i < $db->getNumrows(); $i++) {            self::$text[$db->getValue('text_name', $i)] = $db->getValue('text_value', $i);        }        Template::setText('text', self::$text);    }    /**     * Methode zum auslesen von einer Textvariablen     * @param string $sName     * @return     */    public static function getText($sName)    {        return self::$text[$sName];    }    /**     * Methode zum auslesen aller Systemtexte     * und den Texten zum aktuellen Controller     */    public static function loadAdminTexte($language)    {        $tabelle = "wos_language_" . $language;        $db = new Database('SMT-ADMIN');        return $db->getQuery("SELECT * FROM $tabelle ORDER BY art DESC,text_name", array(), True);    }    /**     * Methode zum speichern eines Textes     * @param $post     */    public static function saveTexte($post)    {        $db = new Database('SMT-ADMIN');        $tabelle = "wos_language_" . $post['sprache'];        foreach ($post as $key => $value) {            $query = "UPDATE $tabelle SET text_value=:value WHERE id=:key";            $value = array(':value' => $value, ':key' => $key);            $db->getQuery($query, $value);        }    }    /**     * Neuen Textbaustein speichern     * @param $post     */    public static function insertText($post)    {        $session = Session::getInstance();        $sprachen = $session->get('sprachen');        $db = new Database('SMT-ADMIN');        $query = "INSERT INTO wos_language_de (text_name, text_value) VALUES (:name,:value)";        $value = array(':name' => $post['text_name'], ':value' => $post['text_value']);        $db->getQuery($query, $value);        $id = $db->getLastID();        for ($i = 0; $i < count($sprachen); $i++) {            $db = new Database('SMT-ADMIN');            $query = "INSERT INTO wos_language_" . $sprachen[$i]['id'] . " (id, text_name, text_value) VALUES (:id,:name,:value)";            $value = array(':id' => $id, ':name' => $post['text_name'], ':value' => $post['text_value']);            if ($sprachen[$i]['id'] != 'de') {                $db->getQuery($query, $value);            }        }    }    /**     * Neue Sprache anlegen     * @param $lang     */    public static function activateLanguage($lang)    {        $db = new Database('SMT-ADMIN');        $db->getQuery("CREATE TABLE wos_language_" . $lang . " "            . "(id INT(11) NOT NULL , "            . "text_name CHAR(60) NOT NULL , "            . "text_value TEXT NOT NULL , "            . "art ENUM('sys','usr','not') "            . "NOT NULL DEFAULT 'sys' ) "            . "ENGINE = InnoDB", array());        $db = new Database('SMT-ADMIN');        $vorlage = $db->getQuery("SELECT * FROM wos_language_de", array(), true);        $db->insertMultiple("wos_language_" . $lang, $vorlage);        $db = new Database('SMT-ADMIN');        $db->getQuery("UPDATE wos_international set aktiv=:aktiv WHERE id=:id", array(':aktiv' => 'ja', ':id' => $lang));    }    /**     * Einen Eintrag löschen     * @param type $id     */    public static function deleteText($id)    {        $session = Session::getInstance();        $sprachen = $session->get('sprachen');        for ($i = 0; $i < count($sprachen); $i++) {            $db = new Database('SMT-ADMIN');            $db->getQuery("DELETE FROM wos_language_" . $sprachen[$i]['id'] . " WHERE id=:id", array(':id' => $id));        }    }    /**     * Einen Eintrag löschen     * @param type $id     */    public static function deleteLang($id)    {        $session = Session::getInstance();        $sprachen = $session->get('sprachen');        for ($i = 0; $i < count($sprachen); $i++) {            $db = new Database('SMT-ADMIN');            $db->getQuery("DROP TABLE wos_language_" . $id, array());            $db->getQuery("UPDATE wos_international set aktiv=:aktiv WHERE id=:id", array(':aktiv' => 'nein', ':id' => $id));        }    }}